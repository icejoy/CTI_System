package Parser;

import java.util.ArrayList;

import Criteria.Config_Class;
import Criteria.Stanford_Class;
import Tool.ReadFile_ArrayList;

public class Parser_MalwareType
{
	Boolean Have_CTI = false;
	ArrayList<String> list;
	ReadFile_ArrayList ra = new ReadFile_ArrayList();
	ArrayList<Integer> Filtered_Content_Index = new ArrayList<Integer>();

	public void parse(ArrayList<String> MalwareName, Config_Class configs, ArrayList<Stanford_Class> content)
	{
		this.Have_CTI = false;
		this.Filtered_Content_Index.clear();
		if (read_ref(configs))
		{
			// ref
			Find_Candidate_Sentences(content);
			// term
			if (configs.get_term_list() != null)
			{
				list = new ArrayList<String>(configs.get_term_list());
				if (list.size() > 0)
				{
					Match(configs.get_term(), content);
				}
			}
			// malware name
			if (MalwareName != null)
			{
				list = new ArrayList<String>(MalwareName);
				if (list.size() > 0)
				{
					Match(configs.get_name(), content);
				}
			}
		}
	}

	public int get_parse()
	{
		if (this.Have_CTI)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}

	public Boolean read_ref(Config_Class configs)
	{
		list = null;
		if (!configs.get_ref_path().equals("null"))
		{
			ra.ReadFile(configs.get_ref_path());
			list = new ArrayList<String>(ra.get_content());
			return true;
		}
		else
		{
			return false;
		}
	}

	public void Find_Candidate_Sentences(ArrayList<Stanford_Class> content)
	{
		for (int i = 0; i < content.size(); i++)
		{
			for (String s : list)
			{
				if (content.get(i).get_Lemma().contains(s))
				{
//					System.out.println(s);
//					System.out.println(content.get(i).get_sentence());
					this.Filtered_Content_Index.add(i);
				}
			}
		}
	}

	public void Match(int context_count, ArrayList<Stanford_Class> content)
	{
		// 看上下句
		int From = 0, End = 0;
		for (int index = 0; index < this.Filtered_Content_Index.size(); index++)
		{
			From = this.Filtered_Content_Index.get(index) - context_count;
			if (From < 0)
			{
				From = 0;
			}
			End = this.Filtered_Content_Index.get(index) + context_count;
			if (End >= content.get(index).get_Pos().size())
			{
				End = content.get(index).get_Pos().size();
			}
			for (int i = From; i < End; i++)
			{
				for (String s : this.list)
				{
					try
					{
						if (content.get(i).get_Lemma().contains(s))
						{
							System.out.println(s);
							System.out.println(content.get(index).get_sentence()+"命中了"+content.get(i).get_sentence());
							this.Have_CTI = true;
							//index = this.Filtered_Content_Index.size();
							//i = End + 1;
							//break;
						}
					}
					catch (IndexOutOfBoundsException e)
					{
						System.out.println("this is last one");
					}
				}
			}
		}
	}
}
