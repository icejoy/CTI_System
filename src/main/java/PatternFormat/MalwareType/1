package Parser;

import java.util.ArrayList;

import Criteria.Config_Class;
import Criteria.Stanford_Class;
import Tool.ReadFile_ArrayList;

public class Parser_Classify
{
	Config_Class keys;
	ReadFile_ArrayList ra = new ReadFile_ArrayList();
	ArrayList<String> list;
	ArrayList<Stanford_Class> content;
	ArrayList<String> type_sentence = new ArrayList<String>();

	public void set_content(ArrayList<Stanford_Class> result)
	{
		this.content = result;
	}

	public void parse(Config_Class settings)
	{
		keys = settings;
		read_ref();
	}
	public ArrayList<String> get_Match()
	{
		return this.type_sentence;
	}

	public void read_ref()
	{
		list = null;
		if (!keys.get_ref_path().equals("null"))
		{
			ra.ReadFile(keys.get_ref_path());
			list = new ArrayList<String>(ra.get_content());
			Check_MalwareType_FromRefANDTerm();
		}
	}

	
}



public void Check_MalwareType_FromRefANDTerm()
	{
		this.type_sentence.clear();
		for (String name : list)
		{
			for (Stanford_Class s : this.content)
			{
				if (s.get_sentence().matches("[^a-zA-Z]" + name + "[^a-zA-Z]")
						|| (s.get_sentence().contains(" " + name) && s.get_sentence().contains(name + " ")))
				{
					for (String term : keys.get_term_list())
					{
						if (s.get_sentence().matches("[^a-zA-Z]" + term + "[^a-zA-Z]")
								|| (s.get_sentence().contains(" " + term) && s.get_sentence().contains(term + " ")))
						{
//							this.type_sentence.add("the malware type is:\r\n"+name);
//							this.type_sentence.add("sentences :\r\n"+s.get_sentence());
							this.type_sentence.add(s.get_sentence());
						}
					}
				}
			}
		}
	}